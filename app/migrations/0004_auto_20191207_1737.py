# Generated by Django 2.2.8 on 2019-12-07 17:37

from django.db import migrations

from app.consts import v2_app_config_context, V2_Config_Schema, V2_Config_JS
from app.manager.config_manager_v2 import get_real_config
from tool.version_upgrade.v1_config_to_v2 import config_v1_to_v2


def init_version(apps, schema_editor):
    """
    Init version.

    Args:
        apps: (todo): write your description
        schema_editor: (todo): write your description
    """
    Version = apps.get_model("app", "Version")
    Version.objects.create(version='v2.0.0')


def init_config(Config):
    """
    Initialize application config.

    Args:
        Config: (dict): write your description
    """

    Config.objects.bulk_create([
        # 通用配置
        Config(name=v2_app_config_context['v2_common_config'], v2_schema=V2_Config_Schema['v2_common_config'],
               v2_config={"_handler": "v2_kv_handler", "data": []}),
        # 顶部图标栏
        Config(name=v2_app_config_context['v2_iconbar_config'], v2_schema=V2_Config_Schema['v2_iconbar_config'],
               v2_config={
                   "left": {"logo": {"_handler": "v2_img_handler", "type": "name", "value": "logo_white", "_attrs": ""},
                            "blog_name": {"text": " 文字标题 ", "_attrs": "style=font-size:18px"}}, "right": [{"img": {
                       "_handler": "v2_img_handler", "type": "fa", "value": "fab fa-github",
                       "_attrs": "style=color:#ffffff;font-size:24px"}, "url": "https://github.com/gojuukaze/DeerU"}]}),
        # 顶部导航栏
        Config(name=v2_app_config_context['v2_navbar_config'], v2_schema=V2_Config_Schema['v2_navbar_config'],
               v2_script=V2_Config_JS['v2_navbar_config'],
               v2_config={"menu": [{"name": "首页", "url": {"_handler": "v2_url_handler", "type": "url", "value": "/"},
                                    "img": {"_handler": "v2_img_handler", "type": "fa", "value": "fas fa-home ",
                                            "_attrs": ""}, "children": []},
                                   {"name": "折叠菜单", "url": {"_handler": "v2_url_handler", "type": "url", "value": ""},
                                    "img": {"_handler": "v2_img_handler", "type": "fa", "value": "fas fa-list ",
                                            "_attrs": ""}, "children": [{"name": "默认分类",
                                                                         "url": {"_handler": "v2_url_handler",
                                                                                 "type": "cat", "value": "默认分类"},
                                                                         "img": {" ": ""}}, {"line": "line"},
                                                                        {"name": "DeerU",
                                                                         "url": {"_handler": "v2_url_handler",
                                                                                 "type": "tag", "value": "DeerU"},
                                                                         "img": {" ": ""}}]}]}),

        # 博客配置
        Config(name=v2_app_config_context['v2_blog_config'], v2_schema=V2_Config_Schema['v2_blog_config'],
               v2_config={"host": "http://127.0.0.1:8000", "title": "Deeru - 开源博客系统", "blog_name": "Deeru - 开源博客系统",
                          "nickname": "gojuukaze", "theme": "base_theme", "baidu_auto_push_show": "是",
                          "baidu_auto_push": 1, "email": {"is_open": False}}),


    ])
    for config in Config.objects.all():
        config.v2_real_config = get_real_config(config.v2_config)
        config.save()


def upgrade_config(apps, schema_editor):
    """
    Upgrade application config.

    Args:
        apps: (todo): write your description
        schema_editor: (todo): write your description
    """
    Config = apps.get_model("app", "Config")
    try:
        common_config = Config.objects.get(name=v2_app_config_context['v2_common_config'])
    except:
        common_config = None


    if not common_config:
        init_config(Config)
    elif not common_config.v2_config:
        config_v1_to_v2(Config)
        print('v2配置已更新，需要进入配置更新"博客配置"')
    else:
        print('配置初始化未成功')


class Migration(migrations.Migration):
    dependencies = [
        ('app', '0003_auto_20191207_1737'),
    ]

    operations = [
        migrations.RunPython(init_version),
        migrations.RunPython(upgrade_config),
    ]
